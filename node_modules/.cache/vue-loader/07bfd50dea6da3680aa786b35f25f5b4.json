{"remainingRequest":"/Users/alex/Documents/HS/basketballbackend/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/alex/Documents/HS/basketballbackend/src/views/Week.vue?vue&type=style&index=0&id=7a6e392e&scoped=true&lang=css&","dependencies":[{"path":"/Users/alex/Documents/HS/basketballbackend/src/views/Week.vue","mtime":1667667530858},{"path":"/Users/alex/Documents/HS/basketballbackend/node_modules/css-loader/dist/cjs.js","mtime":1662170097783},{"path":"/Users/alex/Documents/HS/basketballbackend/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":1662170098278},{"path":"/Users/alex/Documents/HS/basketballbackend/node_modules/postcss-loader/src/index.js","mtime":1662170097902},{"path":"/Users/alex/Documents/HS/basketballbackend/node_modules/cache-loader/dist/cjs.js","mtime":1662170097529},{"path":"/Users/alex/Documents/HS/basketballbackend/node_modules/vue-loader/lib/index.js","mtime":1662170098083}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgouaG9tZS1jb250YWluZXIgewogIHBhZGRpbmc6IDEwcHg7CiAgcGFkZGluZy10b3A6IDVweDsKfQoKLmhvbWUtY29udGVudCB7CiAgcGFkZGluZzogMTBweDsKICBib3JkZXItcmFkaXVzOiA1cHg7CiAgYmFja2dyb3VuZDogI2ZmZjsKfQo="},{"version":3,"sources":["Week.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA+LA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA","file":"Week.vue","sourceRoot":"src/views","sourcesContent":["<template>\n  <div class=\"home-container\">\n    <div class=\"home-content\">\n      <el-row type=\"flex\" align=\"middle\">\n        <el-col :span=\"8\">\n          <el-select v-model=\"selectedValue\" placeholder=\"请选择\" @change=\"selectChanged\">\n            <el-option v-for=\"item in selectOptions\" :key=\"item.value\" :label=\"item.label\" :value=\"item.value\">\n            </el-option>\n          </el-select>\n        </el-col>\n      </el-row>\n      <br>\n      <a-table :columns=\"columns\" :data-source=\"datas\" bordered>\n        <template slot=\"originCourts\" slot-scope=\"text, record, index\">\n          <a-checkbox-group :options=\"record.originCourts.map(myMap)\" :disabled=\"!record.editable\"\n            :default-value=\"record.originCourts.map(mapValidCourts)\" @change=\"(e) => checkboxChanged(e, record._id)\" />\n        </template>\n        <template slot=\"operation\" slot-scope=\"text, record, index\">\n          <div class=\"editable-row-operations\">\n            <span v-if=\"record.editable\">\n              <a-popconfirm title=\"确认保存吗?\" @confirm=\"() => save(record._id)\">\n                <a style=\"margin-left: 10px;\">保存</a>\n              </a-popconfirm>\n              <a-popconfirm title=\"确认取消吗?\" @confirm=\"() => cancel(record._id)\">\n                <a style=\"margin-left: 10px;\">取消</a>\n              </a-popconfirm>\n            </span>\n            <span v-else>\n              <a :disabled=\"editingKey !== ''\" @click=\"() => edit(record._id)\">编辑</a>\n            </span>\n          </div>\n        </template>\n      </a-table>\n    </div>\n  </div>\n</template>\n\n<script>\nimport vue from \"../main\"\nimport { getCollectionsWithParam, updateInfo } from \"../api\"\nconst db = vue.$app.database();\n\nconst columns = [\n  {\n    dataIndex: 'hour',\n    key: 'hour',\n    title: '时间段'\n  },\n  {\n    title: '开放场地',\n    dataIndex: 'originCourts',\n    key: 'originCourts',\n    scopedSlots: { customRender: 'originCourts' },\n  },\n  {\n    title: '操作',\n    dataIndex: 'operation',\n    scopedSlots: { customRender: 'operation' },\n  },\n];\n\nexport default {\n  name: \"week\",\n  data() {\n    return {\n      datas: [],\n      columns,\n      editingKey: '',\n      newData: [{}],\n      collection: \"week\",\n      selectOptions: [\n        { value: 0, label: \"星期日\" },\n        { value: 1, label: \"星期一\" },\n        { value: 2, label: \"星期二\" },\n        { value: 3, label: \"星期三\" },\n        { value: 4, label: \"星期四\" },\n        { value: 5, label: \"星期五\" },\n        { value: 6, label: \"星期六\" },\n      ],\n      selectedValue: 6,\n      cacheDatas: [],\n    };\n  },\n  async created() {\n    // 获取场地配置\n    const getCourts = await getCollectionsWithParam('courts', {})\n    if (getCourts.data.length <= 0) return\n    const originCourts = getCourts.data\n    originCourts.sort((a, b) => { return a._id - b._id })\n    originCourts.forEach(element => {\n      element.valid = false\n    });\n\n    // // 获取时间段配置\n    const getPeriods = await getCollectionsWithParam('periods', { day: this.$data.selectedValue })\n    if (getPeriods.data.length <= 0) {\n      return\n    }\n    const periods = getPeriods.data\n\n    const newPeriods = periods.map((item) => {\n      const hour = vue.$dateFormat(item.start, \"HH:MM\") + ' - ' + vue.$dateFormat(item.end, \"HH:MM\")\n      item.hour = hour\n      item.key = item._id\n      item.courts.forEach(court => {\n        originCourts.map((item) => {\n          if (item._id == court) {\n            item.valid = true\n          }\n        })\n      });\n      item.originCourts = originCourts\n      return item\n    })\n    this.$data.datas = newPeriods\n    this.$data.cacheDatas = this.$data.datas.map(item => ({ ...item }));\n  },\n  methods: {\n    selectChanged(value) {\n      console.log(value, this.$data.selectOptions[value]);\n    },\n    checkboxChanged(e, key) {\n      const newData = [...this.$data.datas];\n      const target = newData.find(item => key === item._id);\n      if (target) {\n        e.forEach(element => {\n          const targetCourt = target.originCourts.find(item => element === item.name)\n          targetCourt.valid = true\n        });\n        this.$data.datas = newData\n      }\n      // console.log(this.$data.datas)\n    },\n    edit(key) {\n      const newData = [...this.$data.datas];\n      const target = newData.find(item => key === item._id);\n      this.editingKey = key;\n      if (target) {\n        target.editable = true;\n        this.$data.datas = newData;\n      }\n    },\n    async save(key) {\n      const newData = [...this.$data.datas];\n      const newCacheData = [...this.$data.cacheDatas];\n      const target = newData.find(item => key === item._id);\n      const targetCache = newCacheData.find(item => key === item._id);\n      if (target && targetCache) {\n        delete target.editable;\n        this.$data.datas = newData;\n        Object.assign(targetCache, target);\n        this.$data.cacheDatas = newCacheData;\n\n        const newPeriod = {}\n        Object.assign(newPeriod, target)\n        newPeriod.originCourts.forEach(element => {\n          if (element.valid === true && !newPeriod.courts.includes(element._id)) {\n            newPeriod.courts.push(element._id)\n          }\n        });\n        delete newPeriod.key\n        delete newPeriod.originCourts\n        delete newPeriod._id\n        delete newPeriod.hour\n        console.log(target._id)\n        const updateRes = await db.collection('periods').doc(target_id).update(newPeriod)\n        console.log(updateRes)\n      }\n      this.editingKey = '';\n    },\n    cancel(key) {\n      const newData = [...this.$data.datas];\n      const target = newData.find(item => key === item._id);\n      this.editingKey = '';\n      if (target) {\n        Object.assign(target, this.$data.cacheDatas.find(item => key === item._id));\n        delete target.editable;\n        this.$data.datas = newData;\n      }\n    },\n    myMap(e) {\n      return e.name\n    },\n    mapValidCourts(e) {\n      if (e.valid) return e.name\n    }\n  },\n};\n</script>\n\n<style scoped>\n.home-container {\n  padding: 10px;\n  padding-top: 5px;\n}\n\n.home-content {\n  padding: 10px;\n  border-radius: 5px;\n  background: #fff;\n}\n</style>"]}]}