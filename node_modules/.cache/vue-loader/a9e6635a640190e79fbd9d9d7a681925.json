{"remainingRequest":"/Users/alex/Documents/BasketballPark/basketballbackend/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/alex/Documents/BasketballPark/basketballbackend/src/views/vip/vipCourt.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/alex/Documents/BasketballPark/basketballbackend/src/views/vip/vipCourt.vue","mtime":1664971463856},{"path":"/Users/alex/Documents/BasketballPark/basketballbackend/node_modules/cache-loader/dist/cjs.js","mtime":1662170097529},{"path":"/Users/alex/Documents/BasketballPark/basketballbackend/node_modules/babel-loader/lib/index.js","mtime":1662170097912},{"path":"/Users/alex/Documents/BasketballPark/basketballbackend/node_modules/cache-loader/dist/cjs.js","mtime":1662170097529},{"path":"/Users/alex/Documents/BasketballPark/basketballbackend/node_modules/vue-loader/lib/index.js","mtime":1662170098083}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["vipCourt.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAyfile":"vipCourt.vue","sourceRoot":"src/views/vip","sourcesContent":["<template>\n    <div class=\"home-container\">\n        <div class=\"home-content\">\n            <el-input placeholder=\"请输入手机号进行搜索\" v-model=\"search\" style=\"width: 300px\" clearable @clear=\"clearClick\">\n                <el-button slot=\"append\" icon=\"el-icon-search\" @click=\"searchClick\"></el-button>\n            </el-input>\n            <el-button style=\"margin-left: 100px\" @click=\"dialogFormVisible = true\" type=\"primary\">新建订单</el-button>\n\n            <el-dialog title=\"订单信息\" :visible.sync=\"dialogFormVisible\">\n                <el-form :model=\"newOrder\">\n                    <el-form-item label=\"用户昵称\" :label-width=\"formLabelWidth\">\n                        <el-input v-model=\"newOrder.nickName\" autocomplete=\"off\"></el-input>\n                    </el-form-item>\n                    <el-form-item label=\"手机号码\" :label-width=\"formLabelWidth\">\n                        <el-input v-model=\"newOrder.phoneNum\" autocomplete=\"off\"></el-input>\n                    </el-form-item>\n                    <el-form-item label=\"选择场地\" :label-width=\"formLabelWidth\">\n                        <el-checkbox-group v-model=\"newOrder.courts\">\n                            <el-checkbox v-for=\"court in courts\" :key=\"court._id\" :label=\"court\" :name=\"court.name\">{{\n                                court.name\n                            }}</el-checkbox>\n                        </el-checkbox-group>\n                    </el-form-item>\n                    <el-form-item label=\"选择日期\" :label-width=\"formLabelWidth\">\n                        <el-date-picker v-model=\"newOrder.date\" type=\"date\" placeholder=\"选择日期\" @change=\"pickeDate\"> </el-date-picker>\n                    </el-form-item>\n                    <el-form-item label=\"选择时间段\" :label-width=\"formLabelWidth\">\n                        <el-checkbox-group v-model=\"newOrder.periods\">\n                            <el-checkbox v-for=\"period in selectedPeriods\" :key=\"period.name\" :label=\"period\" :name=\"period.name\">{{\n                                period.name\n                            }}</el-checkbox>\n                        </el-checkbox-group>\n                    </el-form-item>\n                </el-form>\n                <div slot=\"footer\" class=\"dialog-footer\">\n                    <el-button @click=\"cancelCreate\">取 消</el-button>\n                    <el-button type=\"primary\" @click=\"createNewOrder\">确 定</el-button>\n                </div>\n            </el-dialog>\n            <el-table :data=\"datas\" height=\"550\" fit border style=\"\">\n                <el-table-column prop=\"createdFormat\" label=\"下单时间\" width=\"150\"> </el-table-column>\n                <el-table-column prop=\"orderDateFormat\" label=\"场地时间\" width=\"200\"> </el-table-column>\n                <el-table-column prop=\"courtsFormat\" label=\"场地\" width=\"150\"> </el-table-column>\n                <el-table-column prop=\"userInfo.nickName\" label=\"用户昵称\" width=\"120\"> </el-table-column>\n                <el-table-column prop=\"userInfo.phoneNum\" label=\"用户联系方式\" width=\"120\"> </el-table-column>\n                <el-table-column label=\"二维码\" width=\"120\">\n                    <template slot-scope=\"scope\">\n                        <vue-qr\n                            :correctLevel=\"3\"\n                            :autoColor=\"false\"\n                            colorDark=\"#313a90\"\n                            :text=\"scope.row.qrCode\"\n                            :size=\"95\"\n                            :margin=\"0\"\n                            :logoMargin=\"3\"\n                        ></vue-qr>\n                    </template>\n                </el-table-column>\n                <el-table-column label=\"操作\" width=\"150\">\n                    <template slot-scope=\"scope\">\n                        <el-button @click=\"handleDelete(scope.row)\" size=\"mini\" type=\"danger\">删除</el-button>\n                    </template>\n                </el-table-column>\n            </el-table>\n        </div>\n        <div class=\"block\">\n            <el-pagination layout=\"prev, pager, next\" :total=\"pageCount\" :page-size=\"pageSize\" @current-change=\"handleCurrentChange\">\n            </el-pagination>\n        </div>\n    </div>\n</template>\n\n<script>\nimport {\n    getCollectionCountWithParam,\n    getCollectionsByPageWithParamAndOrder,\n    deleteInfo,\n    getDatasByOrder,\n    addInfo,\n    callCloudFunction\n} from \"@/api\";\nimport VueQr from \"vue-qr\";\n\nexport default {\n    name: \"other\",\n    data() {\n        return {\n            pageCount: 0,\n            currentPage: 1,\n            pageSize: 20,\n            datas: [],\n            newData: [{}],\n            collection: \"courtOrders\",\n            dialogFormVisible: false,\n            newOrder: {\n                nickName: \"\",\n                phoneNum: \"\",\n                courts: [],\n                date: \"\",\n                periods: [],\n                price: 0\n            },\n            courts: [],\n            formLabelWidth: \"120px\",\n            week: [],\n            selectedPeriods: [],\n            search: \"\"\n        };\n    },\n    components: {\n        VueQr\n    },\n    created() {\n        getDatasByOrder(\"courts\", \"number\", \"asc\").then(res => {\n            this.$data.courts = res.data;\n        });\n        getDatasByOrder(\"week\", \"number\", \"asc\").then(res => {\n            this.$data.week = res.data;\n        });\n        getCollectionCountWithParam(this.$data.collection, { isVIP: true })\n            .then(res => {\n                console.log(res);\n                this.$data.pageCount = res.total;\n            })\n            .catch(err => {\n                console.log(err);\n            });\n    },\n    mounted() {\n        this.getCollection(this.$data.currentPage, this.$data.pageSize).then(res => {\n            res.forEach(element => {\n                element.createdFormat = this.$dateFormat(element.created, \"yyyy-mm-dd HH:MM\");\n                element.orderDateFormat =\n                    this.$dateFormat(element.orderMsg.start, \"yyyy-mm-dd HH:MM\") + \" - \" + this.$dateFormat(element.orderMsg.end, \"HH:MM\");\n                element.courtsFormat = this.formatOrderCourts(element.orderMsg.courts);\n                const qrCodeParam = { id: element._id, type: 2 };\n                element.qrCode = JSON.stringify(qrCodeParam);\n            });\n            this.$data.datas = res;\n        });\n    },\n    methods: {\n        handleCurrentChange(val) {\n            this.getCollection(val, this.$data.pageSize, { isVIP: true }).then(res => {\n                res.forEach(element => {\n                    element.createdFormat = this.$dateFormat(element.created, \"yyyy-mm-dd HH:MM\");\n                    element.orderDateFormat =\n                        this.$dateFormat(element.orderMsg.start, \"yyyy-mm-dd HH:MM\") +\n                        \" - \" +\n                        this.$dateFormat(element.orderMsg.end, \"HH:MM\");\n                    element.courtsFormat = this.formatOrderCourts(element.orderMsg.courts);\n                    const qrCodeParam = { id: element._id, type: 2 };\n                    element.qrCode = JSON.stringify(qrCodeParam);\n                });\n                this.$data.datas = res;\n                this.$data.datas = res;\n            });\n        },\n        pickeDate(value) {\n            this.$data.newOrder.periods = [];\n            const numOfWeek = this.$data.newOrder.date.getDay();\n            const periods = this.$data.week.find(period => period._id == numOfWeek.toString());\n            console.log(\"periods:\", periods);\n            var newPeriods = [];\n            periods.period.forEach(element => {\n                var startDate = new Date(value);\n                startDate.setHours(element.startHour);\n                startDate.setMinutes(element.startMinute);\n                const startFormat = startDate.format(\"hh:mm\");\n                var endDate = new Date(value);\n                endDate.setHours(element.endHour);\n                endDate.setMinutes(element.endMinute);\n                const endFormat = endDate.format(\"hh:mm\");\n                const tempPeriod = {\n                    start: startDate,\n                    end: endDate,\n                    halfPrice: element.halfPrice,\n                    fullPrice: element.fullPrice,\n                    name: startFormat + \" - \" + endFormat\n                };\n                newPeriods.push(tempPeriod);\n            });\n            this.$data.selectedPeriods = newPeriods;\n        },\n        cancelCreate() {\n            this.$data.dialogFormVisible = false;\n            this.$data.newOrder = this.defaultNewOrder();\n        },\n        async createNewOrder() {\n            const newOrder = this.$data.newOrder;\n            if (newOrder.phoneNum.length == 0) {\n                this.$message({\n                    type: \"error\",\n                    message: \"请输入手机号！\"\n                });\n                return;\n            }\n\n            if (newOrder.periods.length == 0) {\n                this.$message({\n                    type: \"error\",\n                    message: \"请选择时间段！\"\n                });\n                this.$data.newOrder = this.defaultNewOrder();\n                return;\n            }\n            if (newOrder.courts.length == 0) {\n                this.$message({\n                    type: \"error\",\n                    message: \"请选择场地！\"\n                });\n                this.$data.newOrder = this.defaultNewOrder();\n                return;\n            }\n            var orders = [];\n            newOrder.periods.map((element, index) => {\n                var date = new Date();\n                const currentSecond = date.getSeconds() + index;\n                date.setSeconds(currentSecond);\n                const orderMsg = {\n                    courts: newOrder.courts,\n                    start: element.start,\n                    end: element.end,\n                    outTradeNo: \"0752\" + date.format(\"yyyyMMddhhmmss\"),\n                    price: newOrder.price\n                };\n                orders.push(orderMsg);\n            });\n            if (orders.length == 0) return;\n            const promises = orders.map(element => {\n                return callCloudFunction(\"checkResource\", element);\n            });\n            const res = await Promise.all(promises);\n            var allValid = true;\n            res.forEach(element => {\n                if (!element.result.resourceAvaliable) {\n                    allValid = false;\n                }\n            });\n            if (!allValid) {\n                this.$message({\n                    type: \"error\",\n                    message: \"该时段部分场地已被占用\"\n                });\n                this.$data.newOrder = this.defaultNewOrder();\n                return;\n            }\n            const newOrderPromises = orders.map((element, index) => {\n                element.resourceIds = res[index].result.resourceIds;\n                const param = {\n                    created: new Date(),\n                    _id: element.outTradeNo,\n                    orderMsg: element,\n                    validCount: 40 * element.courts.length,\n                    isVIP: true,\n                    hasRefund: false,\n                    userInfo: {\n                        nickName: newOrder.nickName,\n                        phoneNum: newOrder.phoneNum\n                    }\n                };\n                return addInfo(param, \"courtOrders\");\n            });\n            const newOrderRes = await Promise.all(newOrderPromises);\n\n            this.$message({\n                type: \"success\",\n                message: \"订单新建成功，即将刷新页面\"\n            });\n            this.$data.newOrder = this.defaultNewOrder();\n            setTimeout(() => {\n                this.$router.go(0);\n            }, 1000);\n            return;\n        },\n\n        defaultNewOrder() {\n            return {\n                phoneNum: \"\",\n                courts: [],\n                date: \"\",\n                periods: [],\n                price: 0\n            };\n        },\n        getCollection(currentPage, pageSize, param) {\n            if (!param) {\n                param = {\n                    isVIP: true\n                };\n            }\n            return new Promise((resolve, reject) => {\n                const offset = (currentPage - 1) * pageSize;\n                getCollectionsByPageWithParamAndOrder(this.$data.collection, offset, pageSize, param, \"created\", \"desc\")\n                    .then(res => {\n                        resolve(res.data);\n                    })\n                    .catch(err => {\n                        reject(err);\n                    });\n            });\n        },\n        formatOrderCourts(courts) {\n            let courtsStr = \"\";\n            courts.forEach(court => {\n                courtsStr += court.name + \"，\";\n            });\n            courtsStr = courtsStr.substr(0, courtsStr.length - 1);\n            return courtsStr;\n        },\n        handleDelete(info) {\n            this.$prompt(\"请输入密码\", \"提示\", {\n                confirmButtonText: \"确定\",\n                cancelButtonText: \"取消\",\n                inputType: \"new-password\"\n            }).then(({ value }) => {\n                if (value !== \"947117\") {\n                    this.$message({\n                        type: \"error\",\n                        message: \"密码错误\"\n                    });\n                    return;\n                }\n                this.$confirm(\"删除当前订单信息前请确认是否完成退款操作\", \"提示\", {\n                    confirmButtonText: \"确定\",\n                    cancelButtonText: \"取消\",\n                    type: \"warning\"\n                }).then(() => {\n                    const promises = info.orderMsg.resourceIds.map(id => {\n                        const resource = { _id: id };\n                        return deleteInfo(resource, \"resource\");\n                    });\n                    Promise.all(promises).then(() => {\n                        deleteInfo(info, this.$data.collection).then(res => {\n                            this.$message({\n                                type: \"success\",\n                                message: \"已删除，即将刷新页面！\"\n                            });\n                            setTimeout(() => {\n                                this.$router.go(0);\n                            }, 1000);\n                        });\n                    });\n                });\n            });\n        },\n        searchClick() {\n            getCollectionCountWithParam(this.$data.collection, {\n                isVIP: true,\n                \"userInfo.phoneNum\": this.$data.search\n            })\n                .then(res => {\n                    this.$data.pageCount = res.total;\n                    this.getCollection(this.$data.currentPage, this.$data.pageSize, {\n                        isVIP: true,\n                        \"userInfo.phoneNum\": this.$data.search\n                    }).then(res => {\n                        res.forEach(element => {\n                            element.createdFormat = this.$dateFormat(element.created, \"yyyy-mm-dd HH:MM\");\n                            element.orderDateFormat =\n                                this.$dateFormat(element.orderMsg.start, \"yyyy-mm-dd HH:MM\") +\n                                \" - \" +\n                                this.$dateFormat(element.orderMsg.end, \"HH:MM\");\n                            element.courtsFormat = this.formatOrderCourts(element.orderMsg.courts);\n                            const qrCodeParam = { id: element._id, type: 2 };\n                            element.qrCode = JSON.stringify(qrCodeParam);\n                        });\n                        this.$data.datas = res;\n                    });\n                })\n                .catch(err => {\n                    console.log(err);\n                });\n        },\n        clearClick() {\n            this.getCollection(this.$data.currentPage, this.$data.pageSize).then(res => {\n                console.log(res);\n                res.sort((a, b) => b.created - a.created);\n                res.forEach(element => {\n                    element.createdFormat = this.$dateFormat(element.created, \"yyyy-mm-dd HH:MM\");\n                    element.orderDateFormat =\n                        this.$dateFormat(element.orderMsg.start, \"yyyy-mm-dd HH:MM\") +\n                        \" - \" +\n                        this.$dateFormat(element.orderMsg.end, \"HH:MM\");\n                    element.courtsFormat = this.formatOrderCourts(element.orderMsg.courts);\n                    const qrCodeParam = { id: element._id, type: 2 };\n                    console.log(JSON.stringify(qrCodeParam));\n                    element.qrCode = JSON.stringify(qrCodeParam);\n                });\n                this.$data.datas = res;\n            });\n        }\n    }\n};\nDate.prototype.format = function(fmt) {\n    var o = {\n        \"M+\": this.getMonth() + 1, //月份\n        \"d+\": this.getDate(), //日\n        \"h+\": this.getHours(), //小时\n        \"m+\": this.getMinutes(), //分\n        \"s+\": this.getSeconds(), //秒\n        \"q+\": Math.floor((this.getMonth() + 3) / 3), //季度\n        S: this.getMilliseconds() //毫秒\n    };\n    if (/(y+)/.test(fmt)) {\n        fmt = fmt.replace(RegExp.$1, (this.getFullYear() + \"\").substr(4 - RegExp.$1.length));\n    }\n    for (var k in o) {\n        if (new RegExp(\"(\" + k + \")\").test(fmt)) {\n            fmt = fmt.replace(RegExp.$1, RegExp.$1.length == 1 ? o[k] : (\"00\" + o[k]).substr((\"\" + o[k]).length));\n        }\n    }\n    return fmt;\n};\n</script>\n\n<style></style>\n"]}]}