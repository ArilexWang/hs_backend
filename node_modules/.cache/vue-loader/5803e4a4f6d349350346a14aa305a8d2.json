{"remainingRequest":"/Users/alex/Documents/HS/basketballbackend/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/alex/Documents/HS/basketballbackend/src/components/Index.vue?vue&type=template&id=82b7485c&scoped=true&","dependencies":[{"path":"/Users/alex/Documents/HS/basketballbackend/src/components/Index.vue","mtime":1667650471344},{"path":"/Users/alex/Documents/HS/basketballbackend/node_modules/cache-loader/dist/cjs.js","mtime":1662170097529},{"path":"/Users/alex/Documents/HS/basketballbackend/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":1662170098321},{"path":"/Users/alex/Documents/HS/basketballbackend/node_modules/cache-loader/dist/cjs.js","mtime":1662170097529},{"path":"/Users/alex/Documents/HS/basketballbackend/node_modules/vue-loader/lib/index.js","mtime":1662170098083}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CjxkaXYgY2xhc3M9ImluZGV4LXZ1ZSI+CiAgICA8IS0tIOS+p+i+ueagjyAtLT4KICAgIDxhc2lkZSA6Y2xhc3M9ImFzaWRlQ2xhc3NOYW1lIj4KICAgICAgICA8IS0tIGxvZ28gLS0+CiAgICAgICAgPGRpdiBjbGFzcz0ibG9nby1jIj4KICAgICAgICAgICAgPGltZyBzcmM9Ii4uL2Fzc2V0cy9pbWdzL2xvZ28ucG5nIiBhbHQ9ImxvZ28iIGNsYXNzPSJsb2dvIj4KICAgICAgICAgICAgPHNwYW4gdi1zaG93PSJpc1Nob3dBc2lkZVRpdGxlIj7lkI7lj7DnrqHnkIbns7vnu588L3NwYW4+CiAgICAgICAgPC9kaXY+CiAgICAgICAgPCEtLSDoj5zljZXmoI8gLS0+CiAgICAgICAgPE1lbnUgY2xhc3M9Im1lbnUiIHJlZj0iYXNpZGVNZW51IiB0aGVtZT0iZGFyayIgd2lkdGg9IjEwMCUiIEBvbi1zZWxlY3Q9InNlbGVjdE1lbnVDYWxsYmFjayIgYWNjb3JkaW9uCiAgICAgICAgICAgIDpvcGVuLW5hbWVzPSJvcGVuTWVudXMiIDphY3RpdmUtbmFtZT0iY3VycmVudFBhZ2UiIEBvbi1vcGVuLWNoYW5nZT0ibWVudUNoYW5nZSI+CiAgICAgICAgICAgIDwhLS0g5Yqo5oCB6I+c5Y2VIC0tPgogICAgICAgICAgICA8ZGl2IHYtZm9yPSIoaXRlbSwgaW5kZXgpIGluIG1lbnVJdGVtcyIgOmtleT0iaW5kZXgiPgogICAgICAgICAgICAgICAgPFN1Ym1lbnUgOmNsYXNzPSJpc1Nob3dBc2lkZVRpdGxlID8gJycgOiAnc2hyaW5rJyIgdi1pZj0iaXRlbS5jaGlsZHJlbiIgOm5hbWU9ImluZGV4Ij4KICAgICAgICAgICAgICAgICAgICA8dGVtcGxhdGUgc2xvdD0idGl0bGUiPgogICAgICAgICAgICAgICAgICAgICAgICA8SWNvbiA6c2l6ZT0iaXRlbS5zaXplIiA6dHlwZT0iaXRlbS50eXBlIiAvPgogICAgICAgICAgICAgICAgICAgICAgICA8c3BhbiB2LXNob3c9ImlzU2hvd0FzaWRlVGl0bGUiPnt7IGl0ZW0udGV4dCB9fTwvc3Bhbj4KICAgICAgICAgICAgICAgICAgICA8L3RlbXBsYXRlPgogICAgICAgICAgICAgICAgICAgIDxkaXYgdi1mb3I9IihzdWJJdGVtLCBpKSBpbiBpdGVtLmNoaWxkcmVuIiA6a2V5PSJpbmRleCArIGkiPgogICAgICAgICAgICAgICAgICAgICAgICA8U3VibWVudSA6Y2xhc3M9ImlzU2hvd0FzaWRlVGl0bGUgPyAnJyA6ICdzaHJpbmsnIiB2LWlmPSJzdWJJdGVtLmNoaWxkcmVuIgogICAgICAgICAgICAgICAgICAgICAgICAgICAgOm5hbWU9ImluZGV4ICsgJy0nICsgaSI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8dGVtcGxhdGUgc2xvdD0idGl0bGUiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxJY29uIDpzaXplPSJzdWJJdGVtLnNpemUiIDp0eXBlPSJzdWJJdGVtLnR5cGUiIC8+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHNwYW4gdi1zaG93PSJpc1Nob3dBc2lkZVRpdGxlIj57eyBzdWJJdGVtLnRleHQgfX08L3NwYW4+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L3RlbXBsYXRlPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgPHRlbXBsYXRlIHYtZm9yPSIodGhyZWVJdGVtLCBrKSBpbiBzdWJJdGVtLmNoaWxkcmVuIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8YSBocmVmPSJodHRwczovL3d3dy5iYWlkdS5jb20iIHRhcmdldD0iX2JsYW5rIiA6a2V5PSJpbmRleCArIGkgKyBrIgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB2LWlmPSJ0aHJlZUl0ZW0uaXNFeHRlcm5hbCI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxNZW51SXRlbSA6Y2xhc3M9ImlzU2hvd0FzaWRlVGl0bGUgPyAnJyA6ICdzaHJpbmsnIiBjbGFzcz0ibWVudS1sZXZlbC0zIgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgOm5hbWU9IidleHRlcm5hbC1saW5rLScgKyBpbmRleCArIGkgKyBrIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHRlbXBsYXRlIHYtaWY9IiF0aHJlZUl0ZW0uaGlkZGVuIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxhIDpocmVmPSJ0aHJlZUl0ZW0udXJsIiB0YXJnZXQ9Il9ibGFuayIgY2xhc3M9ImV4dGVybmFsIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8SWNvbiA6c2l6ZT0idGhyZWVJdGVtLnNpemUiIDp0eXBlPSJ0aHJlZUl0ZW0udHlwZSIgLz4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8c3BhbiB2LXNob3c9ImlzU2hvd0FzaWRlVGl0bGUiPnt7IHRocmVlSXRlbS50ZXh0IH19PC9zcGFuPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9hPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L3RlbXBsYXRlPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L01lbnVJdGVtPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvYT4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8TWVudUl0ZW0gdi1lbHNlIDpjbGFzcz0iaXNTaG93QXNpZGVUaXRsZSA/ICcnIDogJ3NocmluayciIGNsYXNzPSJtZW51LWxldmVsLTMiCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDpuYW1lPSJ0aHJlZUl0ZW0ubmFtZSIgOmtleT0iaW5kZXggKyBpICsgayI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHRlbXBsYXRlIHYtaWY9IiF0aHJlZUl0ZW0uaGlkZGVuIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPEljb24gOnNpemU9InRocmVlSXRlbS5zaXplIiA6dHlwZT0idGhyZWVJdGVtLnR5cGUiIC8+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxzcGFuIHYtc2hvdz0iaXNTaG93QXNpZGVUaXRsZSI+e3sgdGhyZWVJdGVtLnRleHQgfX08L3NwYW4+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC90ZW1wbGF0ZT4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L01lbnVJdGVtPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgPC90ZW1wbGF0ZT4KICAgICAgICAgICAgICAgICAgICAgICAgPC9TdWJtZW51PgogICAgICAgICAgICAgICAgICAgICAgICA8dGVtcGxhdGUgdi1lbHNlLWlmPSIhc3ViSXRlbS5oaWRkZW4iPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgPGEgOmhyZWY9InN1Ykl0ZW0udXJsIiB2LWlmPSJzdWJJdGVtLmlzRXh0ZXJuYWwiIHRhcmdldD0iX2JsYW5rIiBjbGFzcz0iZXh0ZXJuYWwiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxNZW51SXRlbSA6Y2xhc3M9ImlzU2hvd0FzaWRlVGl0bGUgPyAnJyA6ICdzaHJpbmsnIgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA6bmFtZT0iJ2V4dGVybmFsLWxpbmstJyArIGluZGV4ICsgJy0nICsgaSI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPEljb24gOnNpemU9InN1Ykl0ZW0uc2l6ZSIgOnR5cGU9InN1Ykl0ZW0udHlwZSIgLz4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8c3BhbiB2LXNob3c9ImlzU2hvd0FzaWRlVGl0bGUiPnt7IHN1Ykl0ZW0udGV4dCB9fTwvc3Bhbj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L01lbnVJdGVtPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9hPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgPE1lbnVJdGVtIHYtZWxzZSA6Y2xhc3M9ImlzU2hvd0FzaWRlVGl0bGUgPyAnJyA6ICdzaHJpbmsnIiA6bmFtZT0ic3ViSXRlbS5uYW1lIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxJY29uIDpzaXplPSJzdWJJdGVtLnNpemUiIDp0eXBlPSJzdWJJdGVtLnR5cGUiIC8+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8c3BhbiB2LXNob3c9ImlzU2hvd0FzaWRlVGl0bGUiPnt7IHN1Ykl0ZW0udGV4dCB9fTwvc3Bhbj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvTWVudUl0ZW0+CiAgICAgICAgICAgICAgICAgICAgICAgIDwvdGVtcGxhdGU+CiAgICAgICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgICA8L1N1Ym1lbnU+CiAgICAgICAgICAgICAgICA8dGVtcGxhdGUgdi1lbHNlLWlmPSIhaXRlbS5oaWRkZW4iPgogICAgICAgICAgICAgICAgICAgIDxhIDpocmVmPSJpdGVtLnVybCIgdi1pZj0iaXRlbS5pc0V4dGVybmFsIiB0YXJnZXQ9Il9ibGFuayIgY2xhc3M9ImV4dGVybmFsIj4KICAgICAgICAgICAgICAgICAgICAgICAgPE1lbnVJdGVtIDpjbGFzcz0iaXNTaG93QXNpZGVUaXRsZSA/ICcnIDogJ3NocmluayciIDpuYW1lPSInZXh0ZXJuYWwtbGluay0nICsgaW5kZXgiPgogICAgICAgICAgICAgICAgICAgICAgICA8SWNvbiA6c2l6ZT0iaXRlbS5zaXplIiA6dHlwZT0iaXRlbS50eXBlIiAvPgogICAgICAgICAgICAgICAgICAgICAgICA8c3BhbiB2LXNob3c9ImlzU2hvd0FzaWRlVGl0bGUiPnt7IGl0ZW0udGV4dCB9fTwvc3Bhbj4KICAgICAgICAgICAgICAgICAgICAgICAgPC9NZW51SXRlbT4KICAgICAgICAgICAgICAgICAgICA8L2E+CiAgICAgICAgICAgICAgICAgICAgPE1lbnVJdGVtIHYtZWxzZSA6Y2xhc3M9ImlzU2hvd0FzaWRlVGl0bGUgPyAnJyA6ICdzaHJpbmsnIiA6bmFtZT0iaXRlbS5uYW1lIj4KICAgICAgICAgICAgICAgICAgICA8SWNvbiA6c2l6ZT0iaXRlbS5zaXplIiA6dHlwZT0iaXRlbS50eXBlIiAvPgogICAgICAgICAgICAgICAgICAgIDxzcGFuIHYtc2hvdz0iaXNTaG93QXNpZGVUaXRsZSI+e3sgaXRlbS50ZXh0IH19PC9zcGFuPgogICAgICAgICAgICAgICAgICAgIDwvTWVudUl0ZW0+CiAgICAgICAgICAgICAgICA8L3RlbXBsYXRlPgogICAgICAgICAgICA8L2Rpdj4KICAgICAgICA8L01lbnU+CiAgICA8L2FzaWRlPgoKICAgIDwhLS0g5Y+z5L6n6YOo5YiGIC0tPgogICAgPHNlY3Rpb24gY2xhc3M9InNlYy1yaWdodCI+CiAgICAgICAgPCEtLSDlpLTpg6ggLS0+CiAgICAgICAgPGRpdiBjbGFzcz0idG9wLWMiPgogICAgICAgICAgICA8aGVhZGVyPgogICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0iaC1sZWZ0Ij4KICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJwb2ludGVyIiBAY2xpY2s9ImlzU2hyaW5rQXNpZGUiIHRpdGxlPSLmlLbnvKkv5bGV5byAIj4KICAgICAgICAgICAgICAgICAgICAgICAgPEljb24gdHlwZT0iaW9zLWFwcHMiIC8+CiAgICAgICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgICAgICAgPCEtLSDpnaLljIXlsZHlip/og70gLS0+CiAgICAgICAgICAgICAgICAgICAgPHAgY2xhc3M9ImNydW1icyI+e3sgY3J1bWJzIH19PC9wPgogICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJoLXJpZ2h0Ij4KICAgICAgICAgICAgICAgICAgICA8IS0tIOS4i+aLieiPnOWNlSAtLT4KICAgICAgICAgICAgICAgICAgICA8RHJvcGRvd24gdHJpZ2dlcj0iY2xpY2siIEBvbi1jbGljaz0idXNlck9wZXJhdGUiIEBvbi12aXNpYmxlLWNoYW5nZT0ic2hvd0Fycm93Ij4KICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0icG9pbnRlciI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8c3Bhbj57eyB1c2VyTmFtZSB9fTwvc3Bhbj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxJY29uIHYtc2hvdz0iYXJyb3dEb3duIiB0eXBlPSJtZC1hcnJvdy1kcm9wZG93biIgLz4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxJY29uIHYtc2hvdz0iYXJyb3dVcCIgdHlwZT0ibWQtYXJyb3ctZHJvcHVwIiAvPgogICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgICAgICAgICAgPERyb3Bkb3duTWVudSBzbG90PSJsaXN0Ij4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxEcm9wZG93bkl0ZW0gZGl2aWRlZCBuYW1lPSIzIj7pgIDlh7rnmbvpmYY8L0Ryb3Bkb3duSXRlbT4KICAgICAgICAgICAgICAgICAgICAgICAgPC9Ecm9wZG93bk1lbnU+CiAgICAgICAgICAgICAgICAgICAgPC9Ecm9wZG93bj4KICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICA8L2hlYWRlcj4KCiAgICAgICAgICAgIDwhLS0g5qCH562+5qCPIC0tPgogICAgICAgICAgICA8ZGl2IGNsYXNzPSJkaXYtdGFncyI+CiAgICAgICAgICAgICAgICA8dWwgY2xhc3M9InVsLWMiPgogICAgICAgICAgICAgICAgICAgIDxsaSB2LWZvcj0iKGl0ZW0sIGluZGV4KSBpbiB0YWdzQXJyeSIgOmtleT0iaW5kZXgiIDpjbGFzcz0ieyBhY3RpdmU6IGlzQWN0aXZlKGl0ZW0ubmFtZSkgfSIKICAgICAgICAgICAgICAgICAgICAgICAgQGNsaWNrPSJhY3RpdmVUYWcoaW5kZXgpIj4KICAgICAgICAgICAgICAgICAgICAgICAgPGEgY2xhc3M9ImxpLWEiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAge3sgaXRlbS50ZXh0IH19CiAgICAgICAgICAgICAgICAgICAgICAgIDwvYT4KICAgICAgICAgICAgICAgICAgICAgICAgPEljb24gc2l6ZT0iMTYiIEBjbGljaz0iY2xvc2VUYWcoaW5kZXgpIiB0eXBlPSJtZC1jbG9zZSIgLz4KICAgICAgICAgICAgICAgICAgICA8L2xpPgogICAgICAgICAgICAgICAgPC91bD4KICAgICAgICAgICAgICAgIDwhLS0g5qCH562+5qCP55u45YWz5Yqf6IO9IC0tPgogICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0iZGl2LWljb25zIj4KICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJyZWZyZXNoLWMiIEBjbGljaz0icmVsb2FkUGFnZSIgdGl0bGU9IuWIt+aWsOW9k+WJjeagh+etvumhtSI+CiAgICAgICAgICAgICAgICAgICAgICAgIDxJY29uIHR5cGU9Im1kLXJlZnJlc2giIC8+CiAgICAgICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0idGFnLW9wdGlvbnMiIHRpdGxlPSLlhbPpl63moIfnrb4iPgogICAgICAgICAgICAgICAgICAgICAgICA8RHJvcGRvd24gdHJpZ2dlcj0iY2xpY2siIEBvbi1jbGljaz0iY2xvc2VUYWdzIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxJY29uIHR5cGU9Imlvcy1vcHRpb25zIiAvPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgPERyb3Bkb3duTWVudSBzbG90PSJsaXN0Ij4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8RHJvcGRvd25JdGVtIG5hbWU9IjEiPuWFs+mXreWFtuS7luagh+etvjwvRHJvcGRvd25JdGVtPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxEcm9wZG93bkl0ZW0gbmFtZT0iMiI+5YWz6Zet5omA5pyJ5qCH562+PC9Ecm9wZG93bkl0ZW0+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L0Ryb3Bkb3duTWVudT4KICAgICAgICAgICAgICAgICAgICAgICAgPC9Ecm9wZG93bj4KICAgICAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICA8L2Rpdj4KICAgICAgICA8L2Rpdj4KICAgICAgICA8IS0tIOmhtemdouS4u+S9kyAtLT4KICAgICAgICA8ZGl2IGNsYXNzPSJtYWluLWNvbnRlbnQiPgogICAgICAgICAgICA8ZGl2IGNsYXNzPSJ2aWV3LWMiPgogICAgICAgICAgICAgICAgPGtlZXAtYWxpdmUgOmluY2x1ZGU9ImtlZXBBbGl2ZURhdGEiPgogICAgICAgICAgICAgICAgICAgIDwhLS0g5a2Q6aG16Z2iIC0tPgogICAgICAgICAgICAgICAgICAgIDxyb3V0ZXItdmlldyB2LWlmPSJpc1Nob3dSb3V0ZXIiIC8+CiAgICAgICAgICAgICAgICA8L2tlZXAtYWxpdmU+CiAgICAgICAgICAgIDwvZGl2PgogICAgICAgIDwvZGl2PgogICAgPC9zZWN0aW9uPgo8L2Rpdj4K"},null]}