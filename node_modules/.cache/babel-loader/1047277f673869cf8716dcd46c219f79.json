{"remainingRequest":"/Users/alex/Documents/HS/basketballbackend/node_modules/babel-loader/lib/index.js!/Users/alex/Documents/HS/basketballbackend/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/alex/Documents/HS/basketballbackend/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/alex/Documents/HS/basketballbackend/src/views/Date.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/alex/Documents/HS/basketballbackend/src/views/Date.vue","mtime":1665229325132},{"path":"/Users/alex/Documents/HS/basketballbackend/node_modules/cache-loader/dist/cjs.js","mtime":1662170097529},{"path":"/Users/alex/Documents/HS/basketballbackend/node_modules/babel-loader/lib/index.js","mtime":1662170097912},{"path":"/Users/alex/Documents/HS/basketballbackend/node_modules/cache-loader/dist/cjs.js","mtime":1662170097529},{"path":"/Users/alex/Documents/HS/basketballbackend/node_modules/vue-loader/lib/index.js","mtime":1662170098083}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["Date.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n    <div class=\"home-container\">\n        <div class=\"home-content\">\n            <el-date-picker\n                v-model=\"value\"\n                align=\"right\"\n                type=\"date\"\n                placeholder=\"选择日期\"\n                :picker-options=\"pickerOptions\"\n                @change=\"onPick\"\n            >\n            </el-date-picker>\n            <el-alert v-if=\"hasRepeatCourt\" title=\"经检测有重复预定的场地，请检查并联系客户！\" type=\"error\"> </el-alert>\n            <el-table :data=\"period\" fit border style=\"\">\n                <el-table-column prop=\"dateFormat\" label=\"时间段\" width=\"150\"> </el-table-column>\n                <el-table-column prop=\"courts\" label=\"已定场地\" width=\"500\"> </el-table-column>\n            </el-table>\n        </div>\n    </div>\n</template>\n\n<script>\nimport { getDataWithId, getCollectionsWithParam } from \"@/api\";\nimport { callCloudFunction } from \"../api\";\nimport vue from \"../main.js\";\n\nconst db = vue.$app.database();\nexport default {\n    name: \"date\",\n    data() {\n        return {\n            pickerOptions: {\n                // disabledDate(time) {\n                //   return time.getTime() > Date.now();\n                // },\n            },\n            value: new Date(new Date().toLocaleDateString()),\n            period: [],\n            hasRepeatCourt: false\n        };\n    },\n    async created() {\n        this.$data.hasRepeatCourt = false;\n        this.$data.period = await this.getPeriod(this.$data.value);\n    },\n    async mounted() {\n        console.log(\"mouted\");\n    },\n    methods: {\n        async onPick() {\n            this.$data.hasRepeatCourt = false;\n            this.$data.period = await this.getPeriod(this.$data.value);\n        },\n        async getPeriod(date) {\n            const week = await getDataWithId(\"week\", date.getDay().toString());\n            const period = [];\n            week.data[0].period.forEach(element => {\n                const tempDic = {};\n                const startDate = new Date(this.$data.value.valueOf());\n                startDate.setHours(element.startHour);\n                startDate.setMinutes(element.startMinute);\n                tempDic.start = startDate;\n                const endDate = new Date(this.$data.value.valueOf());\n                endDate.setHours(element.endHour);\n                endDate.setMinutes(element.endMinute);\n                tempDic.dateFormat = this.$dateFormat(startDate, \"HH:MM\") + \" - \" + this.$dateFormat(endDate, \"HH:MM\");\n                tempDic.courts = [];\n                tempDic.courtName = [];\n                period.push(tempDic);\n            });\n            const start = await this.getStart(this.$data.value);\n            const res = await this.getOrders(this.$data.value);\n            res.forEach(element => {\n                const str = this.$dateFormat(element.orderMsg.start, \"yyyy-mm-dd HH:MM\");\n                const index = start.indexOf(str);\n                element.orderMsg.courts.forEach(court => {\n                    var courtMsg = \"\";\n                    if (element.isVIP) {\n                        if (element.userInfo.nickName && element.userInfo.phoneNum) {\n                            courtMsg = court.name + \"（\" + element.userInfo?.nickName + \" \" + element.userInfo?.phoneNum + \"）\";\n                        } else if (element.userInfo.nickName) {\n                            courtMsg = court.name + \"（\" + \"VIP预定 \" + element.userInfo?.nickName + \"）\";\n                        } else if (element.userInfo.phoneNum) {\n                            courtMsg = court.name + \"（\" + \"VIP预定 \" + element.userInfo?.phoneNum + \"）\";\n                        }\n                    } else {\n                        courtMsg = court.name + \"（\" + element.userInfo?.nickName + \" \" + element.userInfo?.phoneNum + \"）\";\n                    }\n                    period[index].courtName.push(court.name);\n                    period[index].courts.push(courtMsg);\n                });\n                period[index].courtName.sort();\n                period[index].courts.sort();\n            });\n            period.forEach(element => {\n                element.courtName.map(value => {\n                    if (element.courtName.indexOf(value) !== element.courtName.lastIndexOf(value)) {\n                        this.$data.hasRepeatCourt = true;\n                        return value;\n                    }\n                });\n                element.courts = element.courts.join(\", \");\n            });\n            return period;\n        },\n        async getStart(date) {\n            const week = await getDataWithId(\"week\", date.getDay().toString());\n            const start = [];\n            week.data[0].period.forEach(element => {\n                const startDate = new Date(this.$data.value.valueOf());\n                startDate.setHours(element.startHour);\n                startDate.setMinutes(element.startMinute);\n                start.push(this.$dateFormat(startDate, \"yyyy-mm-dd HH:MM\"));\n            });\n            return start;\n        },\n        async getOrders(date) {\n            let tomorrow = new Date(date.valueOf());\n            tomorrow.setTime(tomorrow.getTime() + 24 * 60 * 60 * 1000);\n            let orders = [];\n            const res = await getCollectionsWithParam(\"courtOrders\", {\n                \"orderMsg.start\": db.command.gte(date),\n                \"orderMsg.end\": db.command.lte(tomorrow),\n                hasRefund: false,\n                isVIP: false\n            });\n            orders = orders.concat(res.data);\n            const res2 = await getCollectionsWithParam(\"courtOrders\", {\n                \"orderMsg.start\": db.command.gte(date),\n                \"orderMsg.end\": db.command.lte(tomorrow),\n                isVIP: true\n            });\n            orders = orders.concat(res2.data);\n            console.log(orders);\n            return orders;\n        }\n    }\n};\n</script>\n"],"sourceRoot":"src/views"}]}